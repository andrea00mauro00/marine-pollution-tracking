[SERVICE]
    Flush         1
    Log_Level     info
    Daemon        off
    Parsers_File  parsers.conf
    HTTP_Server   On
    HTTP_Listen   0.0.0.0
    HTTP_Port     2020

# Raccolta log dai container Docker
[INPUT]
    Name              tail
    Tag               docker.*
    Path              /var/lib/docker/containers/*/*.log
    Parser            docker
    DB                /var/log/flb_docker.db
    Mem_Buf_Limit     5MB
    Skip_Long_Lines   On
    Refresh_Interval  10

# Raccolta log di sistema
[INPUT]
    Name              tail
    Tag               system.syslog
    Path              /var/log/syslog
    Parser            syslog
    DB                /var/log/flb_syslog.db
    Mem_Buf_Limit     5MB
    Refresh_Interval  10

# Parser Docker
[FILTER]
    Name                parser
    Match               docker.*
    Key_Name            log
    Parser              docker
    Reserve_Data        True
    Preserve_Key        False

# Filtro per arricchire i log Docker con metadati
[FILTER]
    Name                  kubernetes
    Match                 docker.*
    Kube_URL              https://kubernetes.default.svc:443
    Kube_CA_File          /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    Kube_Token_File       /var/run/secrets/kubernetes.io/serviceaccount/token
    Merge_Log             On
    K8S-Logging.Parser    On
    K8S-Logging.Exclude   Off

# Filtro per aggiungere i label delle applicazioni
[FILTER]
    Name                  grep
    Match                 docker.*
    Regex                 $kubernetes['labels']['app'] ^(sensor_analyzer|image_standardizer|pollution_detector|ml_prediction|dashboard_consumer|alert_manager)$

# Aggiunta log application name
[FILTER]
    Name                  record_modifier
    Match                 docker.*
    Record                app_name ${HOSTNAME}
    Record                environment production

# Output verso Loki
[OUTPUT]
    Name                  loki
    Match                 *
    Host                  loki
    Port                  3100
    Labels                job=fluentbit, container_name=$container_name, app=$kubernetes['labels']['app']
    Label_Keys            $kubernetes['namespace_name'], $kubernetes['pod_name'], $kubernetes['container_name']
    Line_Format           json
    Auto_Kubernetes_Labels on

# Output di backup su file (opzionale)
[OUTPUT]
    Name                  file
    Match                 *
    Path                  /var/log/fluent-bit-backup/
    Format                json_lines
    File                  backup.log